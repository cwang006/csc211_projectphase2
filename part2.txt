Translate the following MIPS assembly code into C++ code: (For any memory reference, you can use your own defined values and assign them to the corresponding variables/registers)

addi $t4, $zero, 5000 # initialize $t4
addi $t5, $zero, 5004 # initialize $t5
addi $t6, $zero, 5008 # initialize $t6
lw $t0, 0($t4)     # Load DM[5000]
lw $t1, 0($t5)     # Load DM[5004]
lw $t2, 0($t6)     # Load DM[5008]
add $t3, $t0, $t1  # Add DM[5000] and DM[5004]
add $t3, $t3, $t2  # Add sum and DM[5008]
sw $t3, 0($t4)     # Store sum to DM[5000]
addi $t6, $zero, 5000
lw $t0, 0($t6)       
jal fun1  
add $t2, $zero, $t1   
addi $t1, $zero, 10    
jal fun2           
addi $t6, $zero, 5040
sw $t3, 0($t6)        
j Done
Fun1:
addi $t2, $zero, 40
slt $t3, $t0, $t2
bne $t3, $zero, R2
sub $t1, $t0, $t2 
j R1
R2:
addi $t1, $zero, 0
R1:	
jr $ra
Fun2:
mul $t3, $t0, $t1   
mul $t4, $t2, $t1   
add $t3, $t3, $t4
jr $ra
Done: addi $t1, $zero, 2
